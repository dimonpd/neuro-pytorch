import torch
import torch.nn as nn

# здесь объявляйте класс модели
class MyModel(nn.Module):
    def __init__(self):
        super().__init__()
        self.net1 = nn.Sequential(
            nn.Conv2d(3, 16, 3, padding=1),
            nn.ReLU(inplace=True),
            nn.MaxPool2d(2),
            nn.Conv2d(16, 32, 3, padding=1),
            nn.ReLU(inplace=True),
            nn.MaxPool2d(2),
            nn.Flatten(),
        )

        self.net2 = nn.Sequential(
            nn.Linear(12, 64, bias=False),
            nn.Sigmoid(),
            nn.BatchNorm1d(64),
        )

        self.output = nn.Linear(576, 10)

    def forward(self, x1, x2):
        x1 = self.net1(x1)
        x2 = self.net2(x2)
        x = torch.cat([x1, x2], dim=1)
        x = self.output(x)
        return x


# тензоры data_img, data_x в программе не менять
batch_size = 32
data_img = torch.rand(batch_size, 3, 16, 16)
data_x = torch.rand(batch_size, 12)

# здесь продолжайте программу
model = MyModel()
model.eval()
predict = model(data_img, data_x)
