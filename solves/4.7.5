import torch
import torch.nn as nn

# здесь объявляйте класс модели
class MyModelRNN(nn.Module):
    def __init__(self):
        super().__init__()
        self.rnn_1 = nn.RNN(5, 9, batch_first=True, bidirectional=True)
        self.rnn_2 = nn.RNN(18, 32, batch_first=True)
        self.output = nn.Linear(32, 3)
        self.out_length = 25

    def forward(self, x):
        _, h = self.rnn_1(x)
        y = torch.cat([h[0], h[1]], dim=1)
        u = torch.zeros(y.size(0), self.out_length, y.size(1))
        u[:, 0, :] = y
        y, _ = self.rnn_2(u)

        n = y.size(1)
        out = torch.empty(y.size(0), n, self.output.out_features)

        for i in range(n):
            out[:, i, :] = self.output(y[:, i, :])
        return out
    

# тензор x в программе не менять
batch_size = 2
seq_length = 12
in_features = 5
x = torch.rand(batch_size, seq_length, in_features)

# здесь продолжайте программу
model = MyModelRNN()

model.eval()
results = model(x)
