import torch
import torch.nn as nn

sigma = 0.1 # стандартное отклонение отсчетов последовательности
r = 0.9 # коэффициент регрессии
sigma_noise = sigma * (1 - r * r) ** 0.5 # стандартное отклонение случайных величин

total = 100 # длина генерируемой последовательности
noise = torch.randn((total, )) # случайные величины, подаваемые на вход модели
x0 = torch.randn((1, )) * sigma # начальное значение вектора скрытого состояния

# здесь продолжайте программу
model = nn.RNN(1, 1, bias=False, batch_first=True)
model.weight_hh_l0.data = torch.tensor([[r]], dtype=torch.float32)
model.weight_ih_l0.data = torch.tensor([[sigma_noise]], dtype=torch.float32)
model.eval()

x, _ = model(noise.view(1, total, 1), x0.view(1, 1, 1))
